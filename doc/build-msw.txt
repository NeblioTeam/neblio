# Windows build notes

We use CI (Continuous Integration) scripts in github with Travis CI. If you face any problems, these should be your reference for building.

## Compilers Supported
The windows version of the Neblio Wallet is built in a Linux environment using MXE. MXE is a cross compiler that compiles Windows applications on Linux. You can get MXE from: https://github.com/mxe/mxe

## Your options with MXE
You can:
1. Compile MXE yourself, then use that to compile Neblio Wallet for Windows
2. Use Docker and just use the MXE we use in CI

## Building MXE yourself

The following instructions are for Ubuntu (16.04). Other Linux distributions might require some minor changes.

These are MXE dependencies:

```
sudo apt-get update
sudo apt-get -y install autoconf automake autopoint bash bison bzip2 flex gettext git g++ gperf intltool libffi-dev libgdk-pixbuf2.0-dev libltdl-dev libssl-dev libxml-parser-perl make openssl p7zip-full patch perl pkg-config python ruby scons sed unzip wget xz-utils g++-multilib libc6-dev-i386
```

The following are the steps to prepare a working MXE for Neblio Wallet:
```
git clone https://github.com/mxe/mxe.git
cd mxe
git checkout 1b7d2e0562f2ec93848f536d2a9d4cd414356d9e
#change libcurl dependencies as Neblio needs
sed -i 's/--with-libidn2/--without-libidn2/g' src/curl.mk
sed -i 's/--with-libssh2/--without-libssh2/g' src/curl.mk
#openssl must be before curl
make openssl && make boost && make db && make miniupnpc && make libqrencode && make curl && make qt5
```

## Use Docker and just use the MXE we use in CI and get the CI script to build Neblio for you

```
docker container prune
docker run --name=cont -it -u root ubuntu:trusty /bin/bash
```
Now you can go to the home directory with `cd`, then compile neblio:

```
cd
apt-get update && apt-get install git python nano -y
git clone https://github.com/NeblioTeam/neblio
cd neblio
python ci_scripts/test_win32-gui_wallet.py
```

Now you can copy the executable to your local machine (Do this before using prune to clean-up, if you'd like to do it):
```
docker cp cont:/root/neblio/build/release/neblio-qt.exe ~/
```
And now the executable is in your home directory.

## Building Neblio Wallet yourself

If you'd not like to use Docker, and you succeeded in building MXE, then follow the following steps to build Neblio for Windows:

1. Define `mxe_bin_path` environment variable to point to the bin directory of MXE
2. export PATH=$mxe_bin_path:$PATH
3. Clone neblio from https://github.com/NeblioTeam/neblio (or get the neblio source from somewhere else)
4. go to the directory wallet/leveldb
5. call `make clean`
6. call `TARGET_OS=NATIVE_WINDOWS make libleveldb.a libmemenv.a CC=${mxe_bin_path}/i686-w64-mingw32.static-gcc CXX=${mxe_bin_path}/i686-w64-mingw32.static-g++`
7. go back to the neblio root directory
8. make a build directory, with `mkdir build`, then go to it with `cd build`
9. call `i686-w64-mingw32.static-qmake-qt5 "USE_UPNP=1" "USE_QRCODE=1" "RELEASE=1" ../neblio-qt.pro`
10. call `make`
11. A directory `release` will have your executable.
